{
	"name": "df_transform_hospital_admissions",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_raw_hospital_admissions",
						"type": "DatasetReference"
					},
					"name": "HospitalAdmissionsSource"
				},
				{
					"dataset": {
						"referenceName": "ds_country_lookup",
						"type": "DatasetReference"
					},
					"name": "CountrySource"
				},
				{
					"dataset": {
						"referenceName": "ds_dim_date",
						"type": "DatasetReference"
					},
					"name": "DimDateSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_processed_hospital_dmissions_weekly",
						"type": "DatasetReference"
					},
					"name": "sinkWeekly"
				},
				{
					"dataset": {
						"referenceName": "ds_processed_hospital_dmissions_daily",
						"type": "DatasetReference"
					},
					"name": "sinkDaily"
				}
			],
			"transformations": [
				{
					"name": "selectRequiredColumns1"
				},
				{
					"name": "CountryLookup"
				},
				{
					"name": "selectRequiredColumns2"
				},
				{
					"name": "splitDailyFromWeekly"
				},
				{
					"name": "derivedECDCyearWeek"
				},
				{
					"name": "aggDimSource"
				},
				{
					"name": "joinwithDate"
				},
				{
					"name": "pivotWeekData"
				},
				{
					"name": "pivotDailyData"
				},
				{
					"name": "sortWeekly"
				},
				{
					"name": "sortDaily"
				},
				{
					"name": "select1"
				},
				{
					"name": "select2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as double,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> HospitalAdmissionsSource",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CountrySource",
				"source(output(",
				"          date_key as string,",
				"          date as string,",
				"          year as string,",
				"          month as string,",
				"          day as string,",
				"          day_name as string,",
				"          day_of_year as string,",
				"          week_of_month as string,",
				"          week_of_year as string,",
				"          month_name as string,",
				"          year_month as string,",
				"          year_week as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DimDateSource",
				"HospitalAdmissionsSource select(mapColumn(",
				"          country,",
				"          indicator,",
				"          Reported_date = date,",
				"          Reported_year_week = year_week,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectRequiredColumns1",
				"selectRequiredColumns1, CountrySource lookup(selectRequiredColumns1@country == CountrySource@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> CountryLookup",
				"CountryLookup select(mapColumn(",
				"          country = selectRequiredColumns1@country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          country = CountrySource@country,",
				"          population,",
				"          indicator,",
				"          Reported_date,",
				"          Reported_year_week,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectRequiredColumns2",
				"selectRequiredColumns2 split(indicator=='Weekly new hospital admissions per 100k' || indicator=='Weekly new ICU admissions per 100k',",
				"     disjoint: false) ~> splitDailyFromWeekly@(weekly, daily)",
				"DimDateSource derive(ecdc_week_year = year+'-W'+lpad(week_of_year,2,'0')) ~> derivedECDCyearWeek",
				"derivedECDCyearWeek aggregate(groupBy(ecdc_week_year),",
				"     week_start_date = min(date),",
				"          week_end_date = max(date)) ~> aggDimSource",
				"splitDailyFromWeekly@weekly, aggDimSource join(Reported_year_week == ecdc_week_year,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinwithDate",
				"joinwithDate pivot(groupBy(country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          Reported_year_week,",
				"          source,",
				"          week_start_date,",
				"          week_end_date),",
				"     pivotBy(indicator, ['Weekly new hospital admissions per 100k', 'Weekly new ICU admissions per 100k']),",
				"     count = sum(value),",
				"     columnNaming: '$V_$N',",
				"     lateral: true) ~> pivotWeekData",
				"splitDailyFromWeekly@daily pivot(groupBy(country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          Reported_date,",
				"          source),",
				"     pivotBy(indicator, ['Daily ICU occupancy', 'Daily hospital occupancy']),",
				"     count = sum(value),",
				"     columnNaming: '$V_$N',",
				"     lateral: true) ~> pivotDailyData",
				"pivotWeekData sort(desc(Reported_year_week, true),",
				"     asc(country, true)) ~> sortWeekly",
				"pivotDailyData sort(desc(Reported_date, true),",
				"     asc(country, true)) ~> sortDaily",
				"sortWeekly select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          Reported_year_week,",
				"          week_start_date,",
				"          week_end_date,",
				"          {new hospital admissions_count} = {Weekly new hospital admissions per 100k_count},",
				"          {new ICU admission_count} = {Weekly new ICU admissions per 100k_count},",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"sortDaily select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          Reported_date,",
				"          {hospital occupancy_count} = {Daily hospital occupancy_count},",
				"          {ICU occupancy_count} = {Daily ICU occupancy_count},",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkWeekly",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkDaily"
			]
		}
	}
}